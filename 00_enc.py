# Obfuscated by the Botpalys encoder
#Time: Tue Oct  7 10:18:19 2025
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))